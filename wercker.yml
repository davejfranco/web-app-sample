# This references the default Python container from
# the Docker Hub with the 2.7 tag:
# https://registry.hub.docker.com/_/python/
# If you want to use a slim Python container with
# version 3.4.3 you would use: python:3.4-slim
# If you want Google's container you would reference google/python
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: ubuntu
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:

    # - script:
    #     name: build project's dependency environment
    #     code: |
    #         pip install virtualenv
    #         virtualenv venv
    #         venv/bin/pip install -r src/requirements.txt
    - script:
        name: install dependencies
        code: |
            apt-get update -y && apt-get install -y jq

    - internal/docker-build: 
        dockerfile: Dockerfile
        image-name: build-app
        nocache: true

test:

    - internal/docker-run:
        image: build-app
        name: myTestContainer
    
    - script:
        name: test spected result
        code: |
            if curlOutput=`curl -s myTestContainer:5000 | jq -r '.name'`; then 
                if [ "$curlOutput" == "My REST API sample" ]; then
                    echo "Test passed: container gave expected response"
                else
                    echo "Test failed: container gave unexpected response: " $curlOutput
                    exit 1
                fi   
            else 
                echo "Test failed: container did not respond"
                exit 1
            fi        
push:

    - internal/docker-push: 
        image: build-image
        username: $OCITENANT/$OCIUSER 
        password: $OCITOKEN
        registry: https://iad.ocir.io/v2/
        repository: iad.ocir.io/$OCITENANT/api
        tag: $WERCKER_GIT_BRANCH_$WERCKER_GIT_COMMIT

